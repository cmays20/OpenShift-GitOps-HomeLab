apiVersion: batch/v1
kind: Job
metadata:
  name: registry-setup-job
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  template:
    spec:
      containers:
        - name: setup-registry
          image: registry.redhat.io/openshift4/ose-cli
          command:
            - /bin/bash
            - -c
            - |
              echo "Setting up Registry"
              echo ""
              
              echo "Retrieving AWS Creds for the ODF Bucket"
              echo ""
              
              AWS_ACCESS_KEY_ID=$(oc get secret -n openshift-storage rgwbucket -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 --decode)
              AWS_SECRET_ACCESS_KEY=$(oc get secret -n openshift-storage rgwbucket -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 --decode)
              
              echo "Creating secret in openshift-image-registry namespace for access to bucket"
              echo ""
              
              oc create secret generic image-registry-private-configuration-user --from-literal=REGISTRY_STORAGE_S3_ACCESSKEY=${AWS_ACCESS_KEY_ID} --from-literal=REGISTRY_STORAGE_S3_SECRETKEY=${AWS_SECRET_ACCESS_KEY} --namespace openshift-image-registry
              
              echo "Getting route to bucket and configuring Config Map"
              echo ""
              route_host=$(oc get route ocs-storagecluster-cephobjectstore -n openshift-storage --template='{{ .spec.host }}')
              oc extract secret/$(oc get ingresscontroller -n openshift-ingress-operator default -o json | jq '.spec.defaultCertificate.name // "router-certs-default"' -r) -n openshift-ingress --confirm
              oc create configmap image-registry-s3-bundle --from-file=ca-bundle.crt=./tls.crt  -n openshift-config
              
              echo "Patching the internal registry object"
              echo ""
              oc patch config.image/cluster -p '{"spec":{"managementState":"Managed","replicas":2,"storage":{"managementState":"Unmanaged","s3":{"bucket":'\"${bucket_name}\"',"region":"us-east-1","regionEndpoint":'\"https://${route_host}\"',"virtualHostedStyle":false,"encrypt":false,"trustedCA":{"name":"image-registry-s3-bundle"}}}}}' --type=merge

      restartPolicy: Never
      serviceAccountName: internal-registry-setup
  backoffLimit: 4